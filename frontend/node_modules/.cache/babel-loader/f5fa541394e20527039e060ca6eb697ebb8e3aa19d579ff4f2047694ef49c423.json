{"ast":null,"code":"var _jsxFileName = \"/home/taurus/Projects/PythonWeb/flask-quick-start/frontend/src/components/PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, Paper, TextField, Button, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst PostDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [newComment, setNewComment] = useState({\n    content: '',\n    author: ''\n  });\n  useEffect(() => {\n    fetchPost();\n  }, [id]);\n  const fetchPost = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/posts/${id}`);\n      setPost(response.data);\n    } catch (error) {\n      console.error('Error fetching post:', error);\n    }\n  };\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(`${API_URL}/posts/${id}/comments`, newComment);\n      setNewComment({\n        content: '',\n        author: ''\n      });\n      fetchPost();\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      await axios.delete(`${API_URL}/comments/${commentId}`);\n      fetchPost();\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n    }\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"\\u52A0\\u8F7D\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: 20,\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"textSecondary\",\n        children: [\"\\u53D1\\u5E03\\u65F6\\u95F4: \", new Date(post.created_at).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"\\u8BC4\\u8BBA (\", post.comments.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      style: {\n        padding: 20,\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitComment,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"\\u4F60\\u7684\\u540D\\u5B57\",\n          value: newComment.author,\n          onChange: e => setNewComment({\n            ...newComment,\n            author: e.target.value\n          }),\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"\\u8BC4\\u8BBA\\u5185\\u5BB9\",\n          multiline: true,\n          rows: 3,\n          value: newComment.content,\n          onChange: e => setNewComment({\n            ...newComment,\n            content: e.target.value\n          }),\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginTop: 10\n          },\n          children: \"\\u53D1\\u8868\\u8BC4\\u8BBA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: comment.content,\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                color: \"textPrimary\",\n                children: comment.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this), ' — ', new Date(comment.created_at).toLocaleString()]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            size: \"small\",\n            onClick: () => handleDeleteComment(comment.id),\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetail, \"Vm+kz4SrPi4szq1U/tpFVVjZ/LA=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Typography","Paper","TextField","Button","List","ListItem","ListItemText","Divider","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","PostDetail","_s","id","post","setPost","newComment","setNewComment","content","author","fetchPost","response","get","data","error","console","handleSubmitComment","e","preventDefault","handleDeleteComment","commentId","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","elevation","style","padding","marginBottom","variant","gutterBottom","title","paragraph","color","Date","created_at","toLocaleString","comments","length","onSubmit","fullWidth","label","value","onChange","target","margin","required","multiline","rows","type","marginTop","map","comment","primary","secondary","component","size","onClick","_c","$RefreshReg$"],"sources":["/home/taurus/Projects/PythonWeb/flask-quick-start/frontend/src/components/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n    Typography,\n    Paper,\n    TextField,\n    Button,\n    List,\n    ListItem,\n    ListItemText,\n    Divider\n} from '@mui/material';\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst PostDetail = () => {\n    const { id } = useParams();\n    const [post, setPost] = useState(null);\n    const [newComment, setNewComment] = useState({ content: '', author: '' });\n\n    useEffect(() => {\n        fetchPost();\n    }, [id]);\n\n    const fetchPost = async () => {\n        try {\n            const response = await axios.get(`${API_URL}/posts/${id}`);\n            setPost(response.data);\n        } catch (error) {\n            console.error('Error fetching post:', error);\n        }\n    };\n\n    const handleSubmitComment = async (e) => {\n        e.preventDefault();\n        try {\n            await axios.post(`${API_URL}/posts/${id}/comments`, newComment);\n            setNewComment({ content: '', author: '' });\n            fetchPost();\n        } catch (error) {\n            console.error('Error posting comment:', error);\n        }\n    };\n\n    const handleDeleteComment = async (commentId) => {\n        try {\n            await axios.delete(`${API_URL}/comments/${commentId}`);\n            fetchPost();\n        } catch (error) {\n            console.error('Error deleting comment:', error);\n        }\n    };\n\n    if (!post) {\n        return <Typography>加载中...</Typography>;\n    }\n\n    return (\n        <div>\n            <Paper elevation={3} style={{ padding: 20, marginBottom: 20 }}>\n                <Typography variant=\"h4\" gutterBottom>\n                    {post.title}\n                </Typography>\n                <Typography variant=\"body1\" paragraph>\n                    {post.content}\n                </Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    发布时间: {new Date(post.created_at).toLocaleString()}\n                </Typography>\n            </Paper>\n\n            <Typography variant=\"h5\" gutterBottom>\n                评论 ({post.comments.length})\n            </Typography>\n\n            <Paper elevation={2} style={{ padding: 20, marginBottom: 20 }}>\n                <form onSubmit={handleSubmitComment}>\n                    <TextField\n                        fullWidth\n                        label=\"你的名字\"\n                        value={newComment.author}\n                        onChange={(e) => setNewComment({ ...newComment, author: e.target.value })}\n                        margin=\"normal\"\n                        required\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"评论内容\"\n                        multiline\n                        rows={3}\n                        value={newComment.content}\n                        onChange={(e) => setNewComment({ ...newComment, content: e.target.value })}\n                        margin=\"normal\"\n                        required\n                    />\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ marginTop: 10 }}>\n                        发表评论\n                    </Button>\n                </form>\n            </Paper>\n\n            <List>\n                {post.comments.map((comment) => (\n                    <React.Fragment key={comment.id}>\n                        <ListItem>\n                            <ListItemText\n                                primary={comment.content}\n                                secondary={\n                                    <>\n                                        <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n                                            {comment.author}\n                                        </Typography>\n                                        {' — '}\n                                        {new Date(comment.created_at).toLocaleString()}\n                                    </>\n                                }\n                            />\n                            <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                onClick={() => handleDeleteComment(comment.id)}\n                            >\n                                删除\n                            </Button>\n                        </ListItem>\n                        <Divider />\n                    </React.Fragment>\n                ))}\n            </List>\n        </div>\n    );\n};\n\nexport default PostDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}